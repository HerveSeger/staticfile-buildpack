worker_processes 4;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events {
	use epoll;
	accept_mutex on;
	multi_accept on;
	worker_connections 1024;
}

http {
	log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
	access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
	default_type application/octet-stream;
	include mime.types;
	sendfile on;
	gzip on;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";
	gzip_comp_level 2;
	gzip_min_length 512;
	gzip_proxied any;
	gzip_vary on;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	tcp_nopush on;
	keepalive_timeout 30;
	port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>

	server {
	  	listen <%= ENV["PORT"] %>;
	  	server_name localhost;
	  	keepalive_timeout 5;

	  	location / {
	  		expires -1;
	  		root <%= ENV["APP_ROOT"] %>/public;
	  		index index.html index.htm Default.htm;
	  		<% if (ENV["CUSTOM_404"]) %>
	  			error_page 404 <%= ENV["CUSTOM_404"] %>;
	  		<% end %>
	  		<% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
	  			autoindex on;
	  		<% end %>
	  		<% if File.exists?(auth_file = File.join(ENV["APP_ROOT"], "nginx/conf/.htpasswd")) %>
				auth_basic "Restricted";                                #For Basic Auth
				auth_basic_user_file <%= auth_file %>;  #For Basic Auth
			<% end %>
			<% if ENV["FORCE_HTTPS"] %>
				if ($http_x_forwarded_proto = http) {
					return 301 https://$host$request_uri;
				}
			<% end %>
			try_files $uri $uri/ /index.html =404;
		}
	}
}
